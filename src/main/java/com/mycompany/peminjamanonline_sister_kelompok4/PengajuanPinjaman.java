/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.peminjamanonline_sister_kelompok4;

import com.mycompany.peminjamanonline_sister_kelompok4.KafkaProducer.KafkaPengajuanProducer;
import com.mycompany.peminjamanonline_sister_kelompok4.KafkaProducer.KafkaRegisterProducer;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.clients.producer.Producer;
import org.apache.kafka.clients.producer.ProducerRecord;

/**
 *
 * @author ACER
 */
public class PengajuanPinjaman extends javax.swing.JFrame {

    private final int iduser; // Store the user ID
    pengajuan pgj = new pengajuan();
    Properties props = new Properties();
    private Connection connection;

    void kirimdata() {
        pgj.setJumlah(txtJumlah.getText());
        pgj.setSukuBunga(txtBunga.getText());
        pgj.setTenor(CbTenor.getSelectedItem().toString());
        pgj.setAngsuran(txtCicilan.getText());

        try (Producer<String, String> producer = new KafkaProducer<>(props)) {
            producer.send(new ProducerRecord<>("pengajuan", "", pgj.toString()));
            JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal mengirim data ke Kafka: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * Creates new form PengajuanPinjaman
     *
     * @param userId
     */
    public PengajuanPinjaman(int userId) {
        this.iduser = userId;
        initComponents();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnAjukan = new javax.swing.JButton();
        btnKembali = new javax.swing.JButton();
        txtJumlah = new javax.swing.JTextField();
        CbTenor = new javax.swing.JComboBox<>();
        txtBunga = new javax.swing.JLabel();
        txtCicilan = new javax.swing.JLabel();
        btnTampil = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Pengajuan Pinjaman");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(67, 67, 67))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(7, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Jumlah :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Tenor :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Bunga :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Cicilan :");

        btnAjukan.setBackground(new java.awt.Color(102, 102, 255));
        btnAjukan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAjukan.setForeground(new java.awt.Color(255, 255, 255));
        btnAjukan.setText("Ajukan");
        btnAjukan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjukanActionPerformed(evt);
            }
        });

        btnKembali.setBackground(new java.awt.Color(102, 102, 255));
        btnKembali.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnKembali.setForeground(new java.awt.Color(255, 255, 255));
        btnKembali.setText("Kembali");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        CbTenor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"1 Bulan", "3 Bulan", "6 Bulan", "12 Bulan", " "}));
        CbTenor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbTenorActionPerformed(evt);
            }
        });

        txtBunga.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtBunga.setText("1 %");

        txtCicilan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtCicilan.setText("Isi");

        btnTampil.setBackground(new java.awt.Color(102, 102, 255));
        btnTampil.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTampil.setForeground(new java.awt.Color(255, 255, 255));
        btnTampil.setText("Tampil");
        btnTampil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTampilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel5)
                                                        .addComponent(jLabel4))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(CbTenor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnKembali)
                                                .addGap(68, 68, 68)
                                                .addComponent(btnAjukan))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel6)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(txtBunga))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel7)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(txtCicilan)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(6, 6, 6)
                                                                                .addComponent(btnTampil)))))))
                                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(CbTenor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(txtBunga))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(txtCicilan))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTampil, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnAjukan)
                                        .addComponent(btnKembali))
                                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>                        

    private void CbTenorActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {
        this.setVisible(false);
    }


    private void btnAjukanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjukanActionPerformed
        int batasMaksPinjaman = 20000000;
        int jumlahPinjaman = Integer.parseInt(txtJumlah.getText());

        if (jumlahPinjaman > batasMaksPinjaman) {
            JOptionPane.showMessageDialog(this, "Jumlah pinjaman tidak boleh lebih dari Rp 20.000.000.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        LocalDate tanggalPengajuan = LocalDate.now();
        LocalDate tanggalCair = tanggalPengajuan.plusDays(1);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String tanggalPengajuanStr = tanggalPengajuan.format(formatter);
        String tanggalCairStr = tanggalCair.format(formatter);

        double bunga = 0.01;
        double totalCair = jumlahPinjaman * (1 + bunga);
        String totalCairStr = String.format("%.2f", totalCair);

        String tenor = CbTenor.getSelectedItem().toString();
        int tenorBulan = Integer.parseInt(tenor.split(" ")[0]);
        double angsuranBulanan = totalCair / tenorBulan;
        String angsuranBulananStr = String.format("%.2f", angsuranBulanan);

        double sisaAngsuran = jumlahPinjaman * (1 + bunga);
        String sisaAngsuranStr = String.format("%.2f", sisaAngsuran);

        KafkaPengajuanProducer.KirimDataPengajuan(iduser, jumlahPinjaman, tanggalPengajuanStr, tanggalCairStr, bunga, totalCairStr, tenor, angsuranBulananStr, sisaAngsuranStr);

        Connection connection = null;
        try {
            connection = DatabaseConnection.getConnection();
        } catch (SQLException ex) {
            Logger.getLogger(PengajuanPinjaman.class.getName()).log(Level.SEVERE, null, ex);
        }
        int pinjamanId = 0;

        try {
            String queryPinjaman = "INSERT INTO pinjaman (iduser, jumlah, tenor, suku_bunga, angsuran_bulanan, tanggal_cair, total_cair, sisa_angsuran) "
                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

            try (PreparedStatement psPinjaman = connection.prepareStatement(queryPinjaman, Statement.RETURN_GENERATED_KEYS)) {
                psPinjaman.setInt(1, iduser);
                psPinjaman.setInt(2, jumlahPinjaman);
                psPinjaman.setString(3, tenor);
                psPinjaman.setDouble(4, bunga);
                psPinjaman.setDouble(5, angsuranBulanan);
                psPinjaman.setString(6, tanggalCairStr);
                psPinjaman.setDouble(7, totalCair);
                psPinjaman.setDouble(8, sisaAngsuran);

                int rowsInserted = psPinjaman.executeUpdate();
                if (rowsInserted > 0) {
                    ResultSet generatedKeys = psPinjaman.getGeneratedKeys();
                    if (generatedKeys.next()) {
                        pinjamanId = generatedKeys.getInt(1);
                    } else {
                        throw new SQLException("Gagal mendapatkan ID pinjaman.");
                    }
                } else {
                    throw new SQLException("Gagal menyimpan data ke tabel pinjaman.");
                }
            }

            String queryPengajuan = "INSERT INTO pengajuan_pinjaman (iduser, pinjaman_id, tanggal_pengajuan, status) "
                    + "VALUES (?, ?, ?, ?)";
            try (PreparedStatement psPengajuan = connection.prepareStatement(queryPengajuan)) {
                psPengajuan.setInt(1, iduser);
                psPengajuan.setInt(2, pinjamanId);
                psPengajuan.setString(3, tanggalPengajuanStr);
                psPengajuan.setString(4, "menunggu");

                psPengajuan.executeUpdate();
            }

            String queryTagihan = "INSERT INTO tagihan (pinjaman_id, tanggal_pembayaran, jumlah_bayar, jatuh_tempo) "
                    + "VALUES (?, ?, ?, ?)";
            try (PreparedStatement psTagihan = connection.prepareStatement(queryTagihan)) {
                for (int i = 1; i <= tenorBulan; i++) {
                    LocalDate jatuhTempo = tanggalCair.plusMonths(i);
                    String jatuhTempoStr = jatuhTempo.format(formatter);

                    psTagihan.setInt(1, pinjamanId);
                    psTagihan.setString(2, tanggalCairStr);
                    psTagihan.setDouble(3, angsuranBulanan);
                    psTagihan.setString(4, jatuhTempoStr);

                    psTagihan.addBatch();
                }
                psTagihan.executeBatch();
            }

            JOptionPane.showMessageDialog(this, "Pengajuan pinjaman berhasil disimpan.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            this.dispose(); 
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan jumlah pinjaman yang valid.", "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnAjukanActionPerformed
    
    private void btnTampilActionPerformed(java.awt.event.ActionEvent evt) {

        try {
            
            int jumlahPinjaman = Integer.parseInt(txtJumlah.getText());
            int tenor = 1;
            double bunga = 0.01;

            String pilihanTenor = (String) CbTenor.getSelectedItem();
            switch (pilihanTenor) {
                case "1 Bulan":
                    tenor = 1;
                    break;
                case "3 Bulan":
                    tenor = 3;
                    break;
                case "6 Bulan":
                    tenor = 6;
                    break;
                case "12 Bulan":
                    tenor = 12;
                    break;
            }

            // Hitung cicilan
            double cicilan = (jumlahPinjaman * (1 + bunga)) / tenor;
            int cicilanBulanan = (int) Math.round(cicilan); // Konversi ke bilangan bulat

            // Tampilkan hasil cicilan
            txtCicilan.setText(String.valueOf(cicilanBulanan));
        } catch (NumberFormatException e) {
            txtCicilan.setText("Input tidak valid!");
        }
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PengajuanPinjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PengajuanPinjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PengajuanPinjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PengajuanPinjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        int loggedInUserId = 1;
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PengajuanPinjaman(loggedInUserId).setVisible(true);
            }
        });
    }

    private javax.swing.JComboBox<String> CbTenor;
    private javax.swing.JButton btnAjukan;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnTampil;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel txtBunga;
    private javax.swing.JLabel txtCicilan;
    private javax.swing.JTextField txtJumlah;

}
